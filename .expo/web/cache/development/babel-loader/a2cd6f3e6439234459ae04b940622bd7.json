{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CategoriesScreen from \"./screens/CategoriesSreen\";\nimport MealsOverviewScreen from \"./screens/MealsOverviewScreen\";\nimport MealDetailScreen from \"./screens/MealDetailScreen\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\n\nfunction DrawerNavigator() {\n  return _jsxs(Drawer.Navigator, {\n    children: [_jsx(Drawer.Screen, {\n      name: \"Categories\",\n      component: CategoriesScreen\n    }), _jsx(Drawer.Screen, {\n      name: \"Categories\",\n      component: CategoriesScreen\n    })]\n  });\n}\n\nexport default function App() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"dark\"\n    }), _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: '#351401'\n          },\n          headerTintColor: '#fff',\n          contentStyle: {\n            backgroundColor: '#3f2f25'\n          }\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Drawer\",\n          component: DrawerNavigator,\n          options: {\n            title: 'All Categories'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"MealsOverview\",\n          component: MealsOverviewScreen\n        }), _jsx(Stack.Screen, {\n          name: \"MealDetail\",\n          component: MealDetailScreen\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["CategoriesScreen","MealsOverviewScreen","MealDetailScreen","NavigationContainer","createNativeStackNavigator","StatusBar","createDrawerNavigator","Stack","Drawer","DrawerNavigator","App","headerStyle","backgroundColor","headerTintColor","contentStyle","title","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"sources":["C:/xampp/htdocs/navigation/App.js"],"sourcesContent":["import { StyleSheet } from 'react-native';\nimport CategoriesScreen from './screens/CategoriesSreen';\nimport MealsOverviewScreen from './screens/MealsOverviewScreen';\nimport MealDetailScreen from './screens/MealDetailScreen';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { createDrawerNavigator } from '@react-navigation/drawer'\n\nconst Stack = createNativeStackNavigator();\nconst Drawer = createDrawerNavigator();\n\nfunction DrawerNavigator() {\n  return <Drawer.Navigator>\n      <Drawer.Screen name=\"Categories\" component={CategoriesScreen} />\n      <Drawer.Screen name=\"Categories\" component={CategoriesScreen} />\n\n    </Drawer.Navigator>\n}\n\nexport default function App() {\n  return (<>\n      <StatusBar style=\"dark\" />\n      <NavigationContainer >\n        <Stack.Navigator\n        screenOptions={{\n          headerStyle: {backgroundColor: '#351401'},\n          headerTintColor: '#fff',\n          contentStyle: {backgroundColor: '#3f2f25'}\n        }}\n        >         \n           <Stack.Screen \n            name=\"Drawer\" \n            component={DrawerNavigator}\n            options={{\n              title: 'All Categories',\n            }}\n           />\n           <Stack.Screen \n            name=\"MealsOverview\"\n            component={MealsOverviewScreen}\n            />\n\n            <Stack.Screen\n            name=\"MealDetail\"\n            component={MealDetailScreen}\n     \n            />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";AACA,OAAOA,gBAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,gBAAP;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,qBAAT,QAAsC,0BAAtC;;;;AAEA,IAAMC,KAAK,GAAGH,0BAA0B,EAAxC;AACA,IAAMI,MAAM,GAAGF,qBAAqB,EAApC;;AAEA,SAASG,eAAT,GAA2B;EACzB,OAAO,MAAC,MAAD,CAAQ,SAAR;IAAA,WACH,KAAC,MAAD,CAAQ,MAAR;MAAe,IAAI,EAAC,YAApB;MAAiC,SAAS,EAAET;IAA5C,EADG,EAEH,KAAC,MAAD,CAAQ,MAAR;MAAe,IAAI,EAAC,YAApB;MAAiC,SAAS,EAAEA;IAA5C,EAFG;EAAA,EAAP;AAKD;;AAED,eAAe,SAASU,GAAT,GAAe;EAC5B,OAAQ;IAAA,WACJ,KAAC,SAAD;MAAW,KAAK,EAAC;IAAjB,EADI,EAEJ,KAAC,mBAAD;MAAA,UACE,MAAC,KAAD,CAAO,SAAP;QACA,aAAa,EAAE;UACbC,WAAW,EAAE;YAACC,eAAe,EAAE;UAAlB,CADA;UAEbC,eAAe,EAAE,MAFJ;UAGbC,YAAY,EAAE;YAACF,eAAe,EAAE;UAAlB;QAHD,CADf;QAAA,WAOG,KAAC,KAAD,CAAO,MAAP;UACC,IAAI,EAAC,QADN;UAEC,SAAS,EAAEH,eAFZ;UAGC,OAAO,EAAE;YACPM,KAAK,EAAE;UADA;QAHV,EAPH,EAcG,KAAC,KAAD,CAAO,MAAP;UACC,IAAI,EAAC,eADN;UAEC,SAAS,EAAEd;QAFZ,EAdH,EAmBI,KAAC,KAAD,CAAO,MAAP;UACA,IAAI,EAAC,YADL;UAEA,SAAS,EAAEC;QAFX,EAnBJ;MAAA;IADF,EAFI;EAAA,EAAR;AA+BD;AAED,IAAMc,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CADG;IAETR,eAAe,EAAE,MAFR;IAGTS,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}